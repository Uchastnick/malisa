# =========================================================================================================
# -- :ФОРМАТ БЛОКА: ---------------------------------------------------------------------------------------

# Каждый блок начинается с ---

# key_phrase_exact - 'список фраз для поиска точного совпадения любой из указанных фраз
# key_phrase_partial - 'список фраз для поиска частичного совпадения с любой из указанных фраз

# Обязательно нужно заполнить либо key_phrase_exact, либо key_phrase_partial

# В списке фраз перед каждой фразой ставится "- " (дефис и пробел)

# В ключевых фразах можно использовать переменную %ROBOT_NAME%, которую система заменит на имя робота

# Блоки реакций обрабатываются в том порядке, в каком записаны в файле
# Обработка последующих блоков прекращается после первого совпадения ключевых фраз

# result_type определяет тип результата реакции: 
#  'speech' => "речь" (ответ), можно, не указывать, подразумевается по умолчанию(!)
#  'action' => "системное действие (встроенное в ядро)",
#  'user_action' => "внешнее (пользовательское действие) действие", см. каталог 'actions'
# Этот параметр - 'обязателен.

# Если result_type указан как 'speech', либо не указан (!), то необходимо указать result_speech с набором фраз ответа системы

# Если result_type указан как 'action', то необходимо указать в result_action наименование действия системы

# Если result_type указан как 'user_action', то необходимо указать в result_action наименование 
# пользовательского действия из каталога 'actions'

# Для указанного действия 'NameOfProcedureInCamelCase' системой будет вызвана процедура 'act_name_of_procedure_in_snake_case()'
# В будущем планируется для пользователя возможность создавать свои собственные действия (action-процедуры)

# Параметр action_need_parameter_text - необязателен, если result_action не имеет параметров
# Если будет указано action_need_parameter_text: 1
# то action-процедуре будет передан результат (`text`) распознавания речи пользователя,
# который может быть получен внутри процедуры как `text = kwargs.get('text')`

# =========================================================================================================
# Пример
# ---
# key_phrase_exact: [] |
# - 'фраза точного совпадения 11'
# - 'фраза точного совпадения 12'
#   ...
# key_phrase_partial: [] |
# - 'фраза частичного совпадения 21'
# - 'фраза частичного совпадения 22'
#   ...
# result_type: '' | 'speech' | 'action' | 'user_action'
# result_speech: [] |
# - 'фраза ответа 1'
# - 'фраза ответа 2'
#   ...
# result_action: 'NameOfActionInCamelCase'
# action_need_parameter_text: 0 | 1
#
# =========================================================================================================
# =========================================================================================================

# Проверка связи
#  После реакции работа на указанную команду - следующую команду можно произносить без имени робота в начале фразы.
#  Во всех остальных случаях - любая команда предваряется обращением к имени робота (которое указано в файле конфигурации).
---
key_phrase_exact:
- '%robot_name%'
- 'привет'
- 'ты здесь'
key_phrase_partial:
result_type: 'action'
result_action: 'IAmReady'

# Озвучить список книг в каталоге `books`
#  Указанный каталог наполняется пользователем. Поддерживаемые форматы файлов: `*.txt`, `*.fb2`, `*.pdf`
---
key_phrase_exact:
key_phrase_partial:
- 'список книг'
- 'список доступных книг'
result_type: 'action'
result_action: 'ReadAvailableBooksList'
  
# Чтение книги вслух
#  Общий формат команды (параметра `text`):
#  text == "(`чтение книги` | `прочти книгу`) [`файл` FILENAME] [`название` BOOKNAME] [`с блока` BLOCK_NUMBER] [`язык` LANGNAME]"
#
#  Опция `название` учитывает частичное совпадение с именем файла.
#  Книга должна находиться в каталоге `books`
#  Поддерживаемые форматы файлов: `*.txt`, `*.fb2`, `*.pdf`
#
#  В системе необходим установленный плеер MPV, в файле конфигурации нужно указать соответствующие настройки.
#  Наличие MPV требуется для подсистемы озвучивания внешним голосовым двигом.
#  БОНУС: при соответствующих настройках работает пауза с клавиатуры, во время воспроизведения и при активном окне робота (клавиша 'p')
#
#  Информация читается порциями (БЛОКАМИ) в цикле.
#  Для выхода из цикла после каждого блока даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов:
#  - ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
#
#  Также, в этот момент возможно указать переход на заданное количество блоков, соответствующими командами:
#  - ('вперёд') на COUNT `блоков`
#  - ('назад') на COUNT `блоков`
#
#  При выходе, робот указывает, на каком блоке Вы остановились.
#  Можно начать чтение с заданного блока.
---
key_phrase_exact:
key_phrase_partial:
- 'чтение книги'
- 'прочти книгу'
result_type: 'action'
result_action: 'ReadLocalBook'
action_need_parameter_text: 1
  
# Перевод слов и фраз
#  Общий формат команды (параметра `text`):
#  text == "(`перевод` | `переведи`) [GOALTEXT] [`на` TOLANG] [(`с` |'с языка') FROMLANG]"
#
#  Если язык требуемого для перевода текста отличается от русского,
#  его (текст) можно будет произнести отдельно, по запросу системы (при этом GOALTEXT и TOLANG изначально можно не указывать)
#
#  В системе желателен установленный плеер MPV, в файле конфигурации нужно указать соответствующие настройки.
#  Наличие MPV требуется для подсистемы озвучивания внешним голосовым двигом.
---
key_phrase_exact:
key_phrase_partial:
- 'перевод'
- 'переведи'
result_type: 'action'
result_action: 'TranslateText'
action_need_parameter_text: 1
  
# Поиск в Википедии
#  (учитывается приоритет команды как более ранней, относительно последующих блоков ключевых фраз)
#
#  Общий формат команды (параметра `text`):
#  text == "(`вики` | `википедия` | `поиск в википедии` | `найди в википедии` | `посмотри википедию`) GOALTEXT [`язык` LANGNAME]"
#
#  Результат поиска отображается в консоли и озвучивается роботом.
#  Возможно указать язык поиска. Также в файле конфигурации настраивается количество показываемых предложений.
---
key_phrase_exact:
key_phrase_partial:
- 'вики'
- 'википедия'
- 'поиск в википедии'
- 'найди в википедии'
- 'посмотри википедию'
result_type: 'action'
result_action: 'WikiSearch'
action_need_parameter_text: 1
  
# Поиск в сети
#  (учитывается приоритет команды как более ранней, относительно последующих блоков ключевых фраз)
#
#  Общий формат команды (параметра `text`):
#  text == "(`поиск` | `найди` | `поищи` | `в сети` | `в интернете` | `в интернет`) GOALTEXT"
#
#  Результат поиска должен отобразиться в интернет-браузере, 
#  который можно указать в файле конфигурации, либо использовать браузер по умолчанию.
#  Также возможно сменить систему поиска (по умолчанию используется Яндекс).
---
key_phrase_exact:
key_phrase_partial:
- 'в сети '
- 'в интернет'
- 'поиск '
- 'поищи '
- 'найди '
result_type: 'action'
result_action: 'WebSearch'
action_need_parameter_text: 1
  
# Завершение работы скрипта робота
---
key_phrase_exact:
- 'пока'
- 'до свидания'
- 'счастливо'
key_phrase_partial:
result_type: 'action'
result_action: 'Exit'

# Примеры для общения с роботом
---
key_phrase_exact:
- 'как дела'
key_phrase_partial:
result_speech:
- 'Хорошо! А у тебя?'

---
key_phrase_exact:
- 'доброе утро'
key_phrase_partial:
result_speech:
- 'Новый день! Надеюсь, он будет отличным!'

---
key_phrase_exact:
- 'добрый день'
key_phrase_partial:
result_speech:
- 'Спасибо! И Вам доброго дня!'

---
key_phrase_exact:
- 'добрый вечер'
key_phrase_partial:
result_speech:
- 'Добрый вечер! И ты тоже - хороший и добрый человек.'

---
key_phrase_exact:
- 'доброй ночи'
- 'спокойной ночи'
key_phrase_partial:
result_speech:
- 'Приятного отдыха.'

---
key_phrase_exact:
- 'я хороший'
key_phrase_partial:
result_speech:
- 'Ты очень хороший.'
- 'Ты замечательный!'
  
---
key_phrase_exact:
- 'спасибо'
key_phrase_partial:
result_speech:
#- 'Пожалуйста!'
- 'Пожалуста!'

# Случайный анекдот, из сети интернет
---
key_phrase_exact:
key_phrase_partial:
- 'анекдот'
result_type: 'action'
result_action: 'SayAnekdot'

# Случайная мудрая фраза (мотиватор)
---
key_phrase_exact:
- 'открой мне глаза'
key_phrase_partial:
- 'мудрость'
- 'мудростью'
- 'цитата'
- 'цитату'
- 'цитатой'
- 'мысль'
- 'мыслью'
- 'мотиватор'
- 'умную фразу'
- 'умную мысль'
result_type: 'action'
result_action: 'SayQuote'

# Изучение неправильных глаголов английского языка.
#  В цикле выбирается случайный глагол.
#
#  Для выхода из цикла после каждого примера даётся пара секунд, 
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
- 'глаголы'
key_phrase_partial:
- 'неправильные глаголы'
result_type: 'action'
result_action: 'SayIrrVerbs'

# Один неправильный глагол английского языка.
#  Выбирается случайным образом.
---
key_phrase_exact:
- 'глагол'
key_phrase_partial:
- 'неправильный глагол'
result_type: 'action'
result_action: 'SayIrrVerb'

# Изучение фразовых глаголов английского языка.
#  В цикле выбирается случайный глагол.
#
#  Для выхода из цикла после каждого примера даётся пара секунд, 
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'фразовые глаголы'
- 'фразовые'
result_type: 'action'
result_action: 'SayPhrasalVerbs'

# Один фразовый глагол английского языка.
#  Выбирается случайным образом.
---
key_phrase_exact:
key_phrase_partial:
- 'фразовый глагол'
- 'фразовый'
result_type: 'action'
result_action: 'SayPhrasalVerb'

# Курс доллара, из интернет
---
key_phrase_exact:
- 'доллар'
key_phrase_partial:
- ' доллар'
result_type: 'action'
result_action: 'DollarCourse'

# Курс евро, из интернет
---
key_phrase_exact:
- 'евро'
key_phrase_partial:
- ' евро'
result_type: 'action'
result_action: 'EuroCourse'

# Актуальное состояние погоды. Базовый вариант.
#  Для получения необходимо:
#   1) Зарегистрироваться на `openweathermap.org` и указать полученный ключ в файле конфигурации, параметр `WEATHER_API`
#   2) Указать в файле конфигурации требуемый населённый пункт, параметр `WEATHER_CITY`
---
key_phrase_exact:
- 'погода сейчас'
key_phrase_partial:
- 'погода'
- 'погоду'
- 'погоде'
result_type: 'action'
result_action: 'WeatherNowInfo'

# Расширенный прогноз погоды, текущее состояние плюс прогноз на семь дней.
#  Для получения необходимо:
#   1) Зарегистрироваться на `openweathermap.org` и указать полученный ключ в файле конфигурации, параметр `WEATHER_API`
#   2) Указать в файле конфигурации значения широты и долготы требуемого населённого пункта, параметры `WEATHER_PLACE_LAT`, `WEATHER_PLACE_LON`
#
#  Информация выводится в цикле.
#  Для выхода из цикла после каждого блока даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'прогноз погоды'
result_type: 'action'
result_action: 'WeatherInfo'

# Список (заголовков) новостей с сайта `AMIC.RU`
#  Информация выводится в цикле.
#  Для выхода из цикла после каждой новости даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'амик'
- 'новости амик'
- 'обзор новостей амик'
result_type: 'action'
result_action: 'ReadAmicNews'

# Список (заголовков) новостей с сайта `ALTAPRESS.RU`
#  Информация выводится в цикле.
#  Для выхода из цикла после каждой новости даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'алтапрес'
- 'новости алтапрес'
- 'обзор новостей алтапрес'
result_type: 'action'
result_action: 'ReadAltapressNews'

# Список (заголовков) новостей с сайта `HABR.COM`
#  Информация выводится в цикле.
#  Для выхода из цикла после каждой новости даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'хабр'
- 'хабар'
- 'новости хабра'
- 'новости хабара'
- 'обзор новостей хабра'
result_type: 'action'
result_action: 'ReadHabrNews'

# Список (заголовков) статей с сайта `HABR.COM`, лучшие за день
#  Информация выводится в цикле.
#  Для выхода из цикла после каждой новости даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'хабр статьи'
- 'хабар статьи'
- 'обзор статей хабра'
- 'хабра за день'
- 'хабр за день'
result_type: 'action'
result_action: 'ReadHabrNewsBestDaily'

# Список (заголовков) статей с сайта `HABR.COM`, топ-50
#  Информация выводится в цикле.
#  Для выхода из цикла после каждой новости даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'хабр топ'
- 'хабар топ'
- 'хабра топ'
- 'хабратоп'
result_type: 'action'
result_action: 'ReadHabrNewsAllTop50'

# Список (заголовков) статей с сайта `HABR.COM`, всё подряд
#  Информация выводится в цикле.
#  Для выхода из цикла после каждой новости даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'полный обзор хабр'
- 'полный обзор хабар'
result_type: 'action'
result_action: 'ReadHabrNewsAll'

# Список (заголовков) актуальных российских новостей, всё подряд
#  Для успешного получения новостей необходимо зарегистрироваться на сайте `newsapi.org`,
#  и указать ключ доступа в конфигурационном файле (параметр `NEWS_API`)
#
#  Информация выводится в цикле.
#  Для выхода из цикла после каждой новости даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'новости'
- 'обзор новостей'
result_type: 'action'
result_action: 'ReadNews'

# Записать текст под диктовку, и скопировать его в буфер обмена.
#  Возможно сохранять многострочный текст, диктуя каждую строку отдельно.
#  Для завершения записи произносится ключевая фраза "Запись завершена".
#
#  Сформированный текст копируется в буфер обмена.
#  Также сохраняется локально на диске в виде txt-файла в каталоге "./memo/", с актуальной меткой даты-времени в наименовании.
---
key_phrase_exact:
key_phrase_partial:
- 'запиши'
- 'сохрани'
result_type: 'action'
result_action: 'MemorizeText'

# Завершение работы операционной системы
#  Даётся 15 секунд на отмену данной команды (см. далее)
---
key_phrase_exact:
- 'завершение работы'
key_phrase_partial:
result_type: 'action'
result_action: 'PcShutdown'

# Перезагрузка операционной системы
#  Даётся 10 секунд на отмену данной команды (см. далее)
---
key_phrase_exact:
- 'перезагрузка машины'
key_phrase_partial:
result_type: 'action'
result_action: 'PcRestart'

# Отмена перезагрузки либо завершения работы ОС
---
key_phrase_exact:
key_phrase_partial:
- 'отмена завершения'
- 'отмена перезагрузки'
result_type: 'action'
result_action: 'PcShutdownAbort'

# Соединение посредством OpenVPN
#  1. Необходимы установленный клиент OpenVPN и все требуемые файлы конфигурации
#  2. В конфигурационном файле указать соответствующие параметры
---
key_phrase_exact:
- 'коннект'
key_phrase_partial:
result_type: 'action'
result_action: 'VpnConnect'

# Отключение OpenVPN
---
key_phrase_exact:
- 'дисконнект'
key_phrase_partial:
result_type: 'action'
result_action: 'VpnDisconnect'

# Открытие сессии Remote Desktop (RDP)
#  Необходим rdp-файл с сохранёнными параметрами, ссылка на который указывается в файле конфигурации
---
key_phrase_exact:
- 'рдп'
- 'ртп'
key_phrase_partial:
- 'открой рдп'
- 'открой ртп'
result_type: 'action'
result_action: 'MstscConnect'

# Соединение с сервером в Rocket.Chat клиенте
#  Необходим установленный клиент Rocket.Chat и прописанные в конфигурационном файле соответствующие параметры
---
key_phrase_exact:
- 'rocket вход'
- 'рокет вход'
key_phrase_partial:
- 'rocket chat вход'
- 'вход rocket'
- 'чат вход'
- 'вход рокет'
- 'рокет чат вход'
result_type: 'action'
result_action: 'RocketChatGuiLogon'

# Запуск приложения Rocket.Chat клиент
#  Необходим установленный клиент Rocket.Chat и прописанные в конфигурационном файле соответствующие параметры
---
key_phrase_exact:
- 'rocket'
- 'рокет'
key_phrase_partial:
- 'rocket chat'
- 'рокет чат'
- 'рабочий чат'
- 'открой чат'
- 'рабочий чат'
result_type: 'action'
result_action: 'RocketChatGuiConnect'

# Получение и озвучивание результатов ПЛАНЁРКИ - информации "что сделано, что планируется", 
# которую пользователи выкладывают в предназначенный для этого канал Rocket.Chat
#  Необходим установленный клиент Rocket.Chat и прописанные в конфигурационном файле соответствующие параметры
#
#  Информация выдаётся порциями в цикле.
#  Для выхода из цикла после каждой порции даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
- 'планёрка'
key_phrase_partial:
result_type: 'action'
result_action: 'RocketChatGetAllStandupInfo'

# Комплексная активация удалённого рабочего места: включение VPN, запуск рабочего чата, открытие RDP и т.д., и т.п.
#  Необходимы установленные все соответствующие программы, настроенные их конфигурации,
#  и прописанные в конфигурационном файле соответствующие параметры
---
###################################
key_phrase_exact:
key_phrase_partial:
- 'включи работу'
- 'рабочее место'
result_type: 'action'
result_action: 'OpenWorkplace'
###################################

# Включить `радио`, играть музыку по случайной ссылке.
#  В качестве `радио` используется проигрыватель AIMP3 и сформированный плейлист (см. файл `config/radio_links.yaml`)
#  Необходим установленный AIMP3, в конфигурационном файле необходимо указать все соответствующие настройки.
---
key_phrase_exact:
key_phrase_partial:
- 'радио рандом'
- 'радио рэндом'
- 'радио random'
- 'радио случайное'
result_type: 'action'
result_action: 'RadioOpenAndPlayRandom'
action_need_parameter_text: 1

# Включить `радио`.
# Играть музыку ЗАДАННОГО СТИЛЯ, либо по случайной ссылке, если стиль не указан.
#
#  Общий формат команды (параметра `text`):
#  text == "`включи радио` [[`стиль`] STYLENAME]"
#
#  Возможные варианты стилей указаны в файле `config/music_style.py`
#  Наборы ссылок для каждого из стилей хранятся в `config/radio_links.yaml`
#
#  После определения стиля - из блока ссылок, определённых для него, выбирается случайная ссылка.
#  Если стиль не распознан - выбирается указанный в конфигурационном файле плейлист по умолчанию.
#
#  В качестве `радио` используется проигрыватель AIMP3 и сформированный плейлист с набором ссылок для каждого из заданных стилей
#  (см. файл `config/radio_links.yaml`)
#  Необходим установленный AIMP3, в конфигурационном файле необходимо указать все соответствующие настройки.
#
#  ВАЖНО: во время проигрывания все остальные команды не работают, 
#         однако робот будет пытаться распознать своё имя, произнесённое Вами, 
#         при его распознавании воспроизведение прекращается, и робот готов воспринимать команды, как обычно.
#         Другой ВАРИАНТ: поставить на паузу и отключить проигрыватель AIMP3 вручную,
#         в этом случае робот также возвращается в обычный режим распознавания команд.
---
key_phrase_exact:
key_phrase_partial:
- 'включи радио'
result_type: 'action'
result_action: 'RadioOpenAndPlay'
action_need_parameter_text: 1

# Остановка воспроизведения музыки
---
key_phrase_exact:
key_phrase_partial:
- 'выключи радио'
- 'радио стоп'
- 'стоп радио'
result_type: 'action'
result_action: 'RadioStop'

# Пауза в воспроизведении музыки
---
key_phrase_exact:
- 'пауза'
key_phrase_partial:
- 'радио на паузу'
- 'радио пауза'
result_type: 'action'
result_action: 'RadioPause'

# Запуск проигрывания музыки после остановки или паузы
#
#  ВАЖНО: во время проигрывания все остальные команды не работают, 
#         однако робот будет пытаться распознать своё имя, произнесённое Вами, 
#         при его распознавании воспроизведение прекращается, и робот готов воспринимать команды, как обычно.
#         Другой вариант: поставить на паузу и отключить проигрыватель AIMP3 вручную,
#         в этом случае робот также возвращается в обычный режим распознавания команд.
---
key_phrase_exact:
- 'радио'
key_phrase_partial:
- 'радио продолжить'
- 'радио дальше'
- 'играть радио'
result_type: 'action'
result_action: 'RadioPlay'

# Озвучивание актуальной статистики по недвижимости в России, открытая информация из интернет.
#  В конфигурационном файле нужно прописать транслитом требуемые города,
#  и, при необходимости, регионы (см. параметры `REALTY_CITIES` и `REALTY_REGIONS`)
#
#  Информация выводится блоками в цикле.
#  Для выхода из цикла после каждого блока даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
---
key_phrase_exact:
key_phrase_partial:
- 'цены на недвижимость'
- 'статистика недвижимости'
- 'статистика по недвижимости'
- 'недвижимость'
result_type: 'action'
result_action: 'RealtyInfo'
  
# Текущие время и дата
---
key_phrase_exact:
key_phrase_partial:
- 'сколько времени'
- 'времени'
- 'время'
result_type: 'action'
result_action: 'CurrentTimeInfo'

# Запоминание слов и фраз немецкого языка
#  Показ и озвучивание случайного слова/фразы в цикле.
#
#  В системе необходим установленный плеер MPV, в файле конфигурации нужно указать соответствующие настройки.
#  Наличие MPV требуется для подсистемы озвучивания внешним голосовым двигом.
#
#  Информация выводится порциями в цикле.
#  Для выхода из цикла после каждой порции даётся пара секунд,
#  чтобы произнести одно или несколько ключевых слов: ('стоп' | 'хватит' | 'окей' | "о'кей" | 'спасибо')
#
#  Дополнительно, улучшены возможности интерактивного взаимодействия, а именно:
#  - специальная подсветка при отображении на экране
#  - возможность ставить на паузу (клавиша 'p')
#  - возможность повтора фрагмента (клавиша 'r')
#  - возможность выхода из цикла (клавиша 'q')
---
key_phrase_exact:
- 'немецкий'
- 'немецкий язык'
key_phrase_partial:
- 'немецкие слова'
- 'немецких слов'
result_type: 'action'
result_action: 'LearnWordsDeutsch'
  
# Создание таймера указанной длительности.
#  (робот должен оставаться активен)
#
#  Чтобы превратить таймер в интервальный, воспроизводящий сигнал через заданный интервал,
#  дополнительно указывается параметр `сигнал через`.
#  
#  Общий формат команды (параметра `text`):  
#  text == "`таймер` [`название` TIMER_NAME] `на` [HOURS `час..`] [MINUTES `минут..`] [SECONDS `секунд..`] 
#           [`сигнал через` [HOURS `час..`] [MINUTES `минут..`] [SECONDS `секунд..`]]"
---
key_phrase_exact:
key_phrase_partial:
- 'таймер'
result_type: 'action'
result_action: 'MakeTimer'
action_need_parameter_text: 1

# Установка будильника в планировщике ОС Windows
#  (будильник сработает даже в том случае, если робот не будет запущен)
#
#  В текущей версии - будильник однократного запуска,
#  поддерживается возможность установить `на завтра`, 
#  либо текущий день (по умолчанию).
#
#  Дополнительно, в текущей версии возможно указать день (число) без наименования месяца.
#  Система будет пытаться установать будильник на ближайший указанный день.
#
#  Если не указан день и время указано более раннее, чем текущее,
#  то будильник создаётся на указанное время следующего дня.
#
#  Новый будильник с тем же именем - перезаписывает предыдущий.
#
#  Общий формат команды (параметра `text`):
#  text == "`будильник` [`название` ALARM_CLOCK_NAME] [`на` (`завтра` | DAY_OF_MONTH)] `на` [HOURS `час..`] [MINUTES `минут..`]"
---
key_phrase_exact:
key_phrase_partial:
- 'будильник'
result_type: 'action'
result_action: 'MakeOsAlarmClock'
action_need_parameter_text: 1

# Создать метроном с указанными параметрами
#
#  Общий формат команды (параметра `text`):  
#  text == "`метроном` [BPM `ударов`] [ (COUNT `нот..` LENGTH) | `размер` COUNT `на` LENGTH) ] [`акцент`] [`шаффл`]"
#  либо
#  text == "`метроном по умолчанию`"
#
#  Параметр `акцент`, означает выделение сильной доли.
#  Параметр `шаффл`, означает пропуск сигнала (либо особый сигнал) на среднюю долю в триолях.
#
#  По умолчанию (если не указано) значения будут следующие (настраивается в `config/config.py`):
#   - 90 ударов в минуту
#   - размер 4/4
#   - с акцентом, с сигналом на каждую долю
#
#  Возможность выхода из процедуры по голосовой команде, после определённого числа тактов.
#  Особый звуковой сигнал оповещает, что есть возможность выхода по специальной голосовой команде,
#  в течение пары секунд.
#
#  Возможность прерывания по `Ctrl-C` с клавиатуры.
#
#  В случае `по умолчанию` - берутся соответствующие параметры из конфигурационного файла.
#
#  Примеры корректных команд:
#    '%robot_name%, метроном 90 ударов, восемь нот восьмых, акцент'
#    '%robot_name%, метроном 124 удара, размер 3 на 8, с акцентом, шаффл'
#    '%robot_name%, метроном по умолчанию'
---
key_phrase_exact:
key_phrase_partial:
- 'метроном'
result_type: 'action'
result_action: 'MakeTimer'
action_need_parameter_text: 1

# Включение света (основной лампы)
---
key_phrase_exact:
- 'включи свет'
- 'включить свет'
key_phrase_partial:
result_type: 'action'
result_action: 'LightOn'
action_need_parameter_text: 1

# Выключение света (основной лампы)
---
key_phrase_exact:
- 'выключи свет'
- 'выключить свет'
- 'гаси свет'
key_phrase_partial:
- 'погаси'
- 'потуши'
result_type: 'action'
result_action: 'LightOff'
action_need_parameter_text: 1

# Обычный свет (базовые параметры)
---
key_phrase_exact:
- 'обычный свет'
- 'включи обычный свет'
- 'нормальный свет'
key_phrase_partial:
result_type: 'action'
result_action: 'LightNormal'
action_need_parameter_text: 1

# Тревога! (индикация светом)
---
key_phrase_exact:
- 'тревога'
key_phrase_partial:
result_type: 'action'
result_action: 'LightAlarm'
action_need_parameter_text: 1

# Красный свет
---
key_phrase_exact:
- 'красный свет'
- 'включи красный'
key_phrase_partial:
result_type: 'action'
result_action: 'LightRed'
action_need_parameter_text: 1

# Зелёный свет
---
key_phrase_exact:
- 'зелёный свет'
- 'включи зелёный'
- 'зелень'
key_phrase_partial:
result_type: 'action'
result_action: 'LightGreen'
action_need_parameter_text: 1

# Синий свет
---
key_phrase_exact:
- 'синий свет'
- 'включи синий'
- 'синева'
key_phrase_partial:
result_type: 'action'
result_action: 'LightBlue'
action_need_parameter_text: 1

# Жёлтый свет
---
key_phrase_exact:
- 'жёлтый свет'
- 'включи жёлтый'
key_phrase_partial:
result_type: 'action'
result_action: 'LightYellow'
action_need_parameter_text: 1

# Оранжевый свет
---
key_phrase_exact:
- 'оранжевый свет'
- 'включи оранжевый'
key_phrase_partial:
result_type: 'action'
result_action: 'LightOrange'
action_need_parameter_text: 1

# Голубой свет
---
key_phrase_exact:
- 'голубой свет'
- 'включи голубой'
key_phrase_partial:
result_type: 'action'
result_action: 'LightBluelight'
action_need_parameter_text: 1

# Фиолетовый свет
---
key_phrase_exact:
- 'фиолетовый свет'
- 'включи фиолетовый'
key_phrase_partial:
result_type: 'action'
result_action: 'LightPurple'
action_need_parameter_text: 1

# Розовый свет
---
key_phrase_exact:
- 'розовый свет'
- 'включи розовый'
key_phrase_partial:
result_type: 'action'
result_action: 'LightPink'
action_need_parameter_text: 1

# Яркость
#
# Установка яркости на заданное количество процентов (10-100)
---
key_phrase_exact:
key_phrase_partial:
- 'яркость'
- 'яркости'
result_type: 'action'
result_action: 'LightBrightness'
action_need_parameter_text: 1

# Цветовая температура
#
# Установка цветовой температуры на указанную величину (1500-7700)
---
key_phrase_exact:
key_phrase_partial:
- 'цветовая температура'
- 'температура цвета'
result_type: 'action'
result_action: 'LightColorTemperature'
action_need_parameter_text: 1

# Список доступных команд
# (вспомогательная процедура)
---
key_phrase_exact:
- 'Список команд'
- 'Список доступных команд'
key_phrase_partial:
result_type: 'speech'
result_speech:
- 'Основные команды:'
- 'Привет'
- 'Список книг'
- 'Чтение книги'
- 'Перевод'
- 'Поиск в википедии'
- 'Поиск в сети'
- 'Анекдот'
- 'Мотиватор'
- 'Цитата'
- 'Неправильный глагол'
- 'Неправильные глаголы'
- 'Фразовый глагол'
- 'Фразовые глаголы'
- 'Немецкие слова'
- 'Курс доллара'
- 'Курс евро'
- 'Погода сейчас'
- 'Прогноз погоды'
- 'Обзор новостей'
- 'Новости амик'
- 'Новости алтапрес'
- 'Новости хабра'
- 'Хабр статьи'
- 'Хабр топ'
- 'Полный обзор хабр'
- 'Запиши'
- 'Завершение работы'
- 'Перезагрузка машины'
- 'Отмена завершения работы'
- 'Отмена перезагрузки'
- 'Коннект'
- 'Дисконнект'
- 'Открой рдп'
- 'Рокет чат'
- 'Рокет чат вход'
- 'Планёрка'
- 'Рабочее место'
- 'Радио случайное'
- 'Включи радио'
- 'Выключи радио'
- 'Радио на паузу'
- 'Радио продолжить'
- 'Статистика по недвижимости'
- 'Загрязнение воздуха'
- 'Пробки на дорогах'
- 'Сколько времени'
- 'Таймер'
- 'Метроном'
- 'Будильник'
- 'Включи свет'
- 'Выключи свет'
- 'Обычный свет'
- 'Включи красный, зелёный, синий, жёлтый, оранжевый, голубой, фиолетовый, розовый'
- 'Яркость'
- 'Цветовая температура'
- 'Подробное описание команд смотрите в файле конфигурации. Обзор завершён.'

# Тестирование процедур
---
key_phrase_exact:
- 'тест'
- 'test'
key_phrase_partial:
result_type: 'action'
result_action: ''
action_need_parameter_text: 1
